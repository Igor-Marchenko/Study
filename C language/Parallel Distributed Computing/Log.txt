Main Thread has added the element to the queue with the number 0
Main Thread has added the element to the queue with the number 1
Main Thread has added the element to the queue with the number 2
Main Thread has added the element to the queue with the number 3
Main Thread has added the element to the queue with the number 4
Queue with elements from 0-th to 4-th has been created !!!
The current value of the sum is 0
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 9;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 14
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 15;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 17
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 31
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 3;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is 0;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is 0
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 14;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 19
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 19
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 30
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -1;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 19;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 24
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 2 has locked the mutex mut1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 24
Thread 2: The sum of c and d is 18
Thread 2: The sum of e and f is 29
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is false
The thread 2 has locked the mutex mcr1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 24
Thread 2 has added the element to the queue with the number 5
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 29
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -2;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -2
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 24;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 29
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 29
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 28
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -3;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -3
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 29;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 34
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 34
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 27
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -4;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -4
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 34;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 39
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 39
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 26
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -5;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -5
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 39;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 44
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 44
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 25
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -6;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -6
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 44;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 49
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 49
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 24
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -7;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -7
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 49;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 54
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 54
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 23
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -8;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -8
The thread 2 has unlocked the mutex mcr1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 54;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 59
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 59
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 22
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -9;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -9
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 59;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 64
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 64
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 21
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -10;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -10
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 64;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 69
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 69
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 20
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The signal sig1 was send from the thread 2
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -11;
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 69
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -11
Thread 2: The sum of c and d is 18
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 69;
Thread 2: The sum of e and f is 19
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 74
Thread 2: The sum of g and h is 11
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 2: The value of flag is false
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 74
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 19
The semaphore scr21 is closed by the thread 4
The thread 5 has locked the mutex mut2
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -12;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -12
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 74;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 79
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 5 is waiting for a signal sig 22
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 79
Thread 1: The sum of c and d is 18
Thread 1: The sum of e and f is 18
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is false
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -13;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -13
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 79;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 84
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 3 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 3 has taken the element from the queue with the number 5
The thread 3 has unlocked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 84
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is 17
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -14;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -14
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 84;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 89
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 89
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is 16
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -15;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -15
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 89;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 94
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 94
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 15
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -16;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -16
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 94;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 99
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 99
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 14
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -17;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -17
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 99;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 104
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 104
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 13
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 6 has locked the mutex mcr1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -18;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -18
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 104;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 109
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 109
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 12
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -19;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -19
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 109;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 114
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 114
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 11
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -20;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -20
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 114;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 119
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 119
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 10
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -21;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -21
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 119;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 124
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 5 has unlocked the mutex mut2
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 124
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 9
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 6 has added the element to the queue with the number 5
The signal sig2 was repeatedly send from the thread 3
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -22;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -22
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 124;
Thread 5: The sum of a and b is 124
Thread 5: The sum of c and d is 1
Thread 5: The sum of e and f is 8
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 129
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 129
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 8
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -23;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -23
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 129;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 134
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 134
The thread 6 has unlocked the mutex mcr1
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 7
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -24;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -24
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 134;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 139
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 139
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 6
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -25;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -25
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 139;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 144
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 144
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 5
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -26;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -26
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 144;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 149
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 149
Thread 1: The sum of c and d is 1
The thread 2 has locked the mutex mcr1
Thread 1: The sum of e and f is 4
The thread 4 has locked the mutex mut1
Thread 1: The sum of g and h is 26
Thread 2 has added the element to the queue with the number 6
The thread 4 has unlocked the mutex mut1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -27;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -27
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 149;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 154
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 4 has locked the mutex mut2
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 sends the signal sig22 to the thread 5
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 4 has unlocked the mutex mut2
The semaphore scr21 is opened by the thread 1
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 154
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is 3
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -28;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -28
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 154;
The thread 2 has unlocked the mutex mcr1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 159
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 159
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is 2
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -29;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -29
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 159;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 164
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The signal sig1 was send from the thread 2
The thread 4 has locked the mutex mut1
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 2 has locked the mutex mut1
The thread 2 is waiting for a signal sig 21
Thread 5 has added the element to the queue with the number 7
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 5 has unlocked the mutex mcr1
Thread 1: The sum of a and b is 164
Thread 1: The sum of c and d is 4294967220
The thread 4 has unlocked the mutex mut1
Thread 1: The sum of e and f is 1
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -30;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -30
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 164;
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 169
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 3 has locked the mutex mcr1
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 169
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is 0
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
Thread 3 has taken the element from the queue with the number 7
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 3 has unlocked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -31;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -31
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 169;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 174
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The signal sig2 was repeatedly send from the thread 3
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 174
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -1
Thread 2: The sum of g and h is 11
The thread 3 has locked the mutex mcr1
Thread 2: The value of flag is true
Thread 3 has taken the element from the queue with the number 6
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 174
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -1
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -32;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -32
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 174;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 179
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 179
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -2
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -33;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -33
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 179;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 184
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 5
The thread 3 has unlocked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The signal sig2 was repeatedly send from the thread 3
The thread 2 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 2 has added the element to the queue with the number 6
The thread 5 has locked the mutex mut2
The thread 5 has unlocked the mutex mut2
Thread 5: The sum of a and b is 184
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -3
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
The thread 4 has unlocked the mutex mut1
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
Thread 5 has added the element to the queue with the number 7
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 184
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -3
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 5 has unlocked the mutex mcr1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 2 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 2 has unlocked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -34;
Thread 2: The sum of a and b is 184
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -34
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -4
The signal sig1 was send from the thread 5
The thread 5 has locked the mutex mut2
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
The thread 5 has unlocked the mutex mut2
Thread 5: The sum of a and b is 189
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 184;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 189
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 3 has locked the mutex mcr1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
Thread 3 has taken the element from the queue with the number 7
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
Thread 5: The sum of c and d is 1
Thread 5: The sum of e and f is -4
The thread 4 has unlocked the mutex mut1
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
The thread 5 has locked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
Thread 5 has added the element to the queue with the number 7
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 has locked the mutex mut1
Thread 1: The sum of a and b is 189
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -4
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 5 has unlocked the mutex mcr1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -35;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -35
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 189;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 194
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 194
The thread 4 has locked the mutex mut1
Thread 1: The sum of c and d is 1
The signal sig1 was send from the thread 5
Thread 1: The sum of e and f is -5
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -36;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -36
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 194;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 199
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 3 has locked the mutex mcr1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
The semaphore scr21 is opened by the thread 1
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
The thread 1 has locked the mutex mut1
Thread 3 has taken the element from the queue with the number 7
The signal sig21 was repeatedly send from the thread 1
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
The thread 1 has unlocked the mutex mut1
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
Thread 1: The sum of a and b is 199
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -6
Thread 1: The sum of g and h is 26
The thread 3 has unlocked the mutex mcr1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -37;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -37
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 199;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 204
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The signal sig2 was repeatedly send from the thread 3
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The thread 2 has locked the mutex mcr1
The signal sig21 was repeatedly send from the thread 1
Thread 2 has added the element to the queue with the number 7
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 204
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -7
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -38;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -38
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 204;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 209
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 5 has locked the mutex mut2
Thread 1: The sum of a and b is 209
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -8
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 2 has unlocked the mutex mcr1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -39;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -39
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 209;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 214
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 5 has unlocked the mutex mut2
Thread 1: The sum of a and b is 214
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -9
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -40;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -40
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 214;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 219
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 219
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -10
The signal sig1 was send from the thread 2
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The thread 2 has locked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
The thread 2 has unlocked the mutex mut1
Thread 5: The sum of a and b is 219
Thread 2: The sum of a and b is 219
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -10
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -10
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -41;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -41
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 219;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 224
The thread 3 has locked the mutex mcr1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 224
The thread 4 has locked the mutex mut2
Thread 1: The sum of c and d is 4294967220
The thread 4 sends the signal sig22 to the thread 5
Thread 1: The sum of e and f is -11
The thread 4 has unlocked the mutex mut2
Thread 3 has taken the element from the queue with the number 7
The thread 3 has unlocked the mutex mcr1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -42;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -42
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 224;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 229
The signal sig2 was repeatedly send from the thread 3
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 229
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -12
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -43;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -43
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 229;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 234
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 7
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 2 has unlocked the mutex mcr1
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 234
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -13
The signal sig1 was send from the thread 2
Thread 1: The sum of g and h is 11
The thread 2 has locked the mutex mut1
Thread 1: The value of flag is true
The thread 2 has unlocked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -44;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -44
Thread 2: The sum of a and b is 234
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 234;
Thread 2: The sum of c and d is 1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 239
Thread 2: The sum of e and f is -14
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 2: The sum of g and h is 26
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 2: The value of flag is true
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 2 has locked the mutex mcr1
The semaphore scr21 is opened by the thread 1
Thread 2 has added the element to the queue with the number 8
The thread 4 has unlocked the mutex mut1
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 5 has added the element to the queue with the number 9
Thread 1: The sum of a and b is 239
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -14
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -45;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -45
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 239;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 244
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 5 has unlocked the mutex mcr1
The semaphore scr21 is opened by the thread 1
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
The signal sig1 was send from the thread 5
Thread 2: The sum of a and b is 244
The thread 5 has locked the mutex mut2
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -15
The thread 3 has locked the mutex mcr1
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Thread 3 has taken the element from the queue with the number 9
The thread 4 has locked the mutex mut1
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 5 has unlocked the mutex mut2
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 9
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 244
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -15
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -46;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -46
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 244;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 249
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5: The sum of a and b is 249
The thread 1 has locked the mutex mut1
Thread 5: The sum of c and d is 1
The signal sig21 was repeatedly send from the thread 1
Thread 5: The sum of e and f is -16
The thread 1 has unlocked the mutex mut1
Thread 5: The sum of g and h is 26
Thread 1: The sum of a and b is 249
Thread 5: The value of flag is true
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -16
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -47;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -47
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 249;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 254
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 2 has unlocked the mutex mcr1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 254
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -17
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -48;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -48
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 254;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 259
The thread 4 has locked the mutex mut2
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 is waiting for an open semaphore scr21
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 259
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -18
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -49;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -49
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 259;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 264
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The signal sig1 was send from the thread 2
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 5 has locked the mutex mcr1
Thread 1: The sum of a and b is 264
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -19
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -50;
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -50
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 264;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 269
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5 has added the element to the queue with the number 10
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 2 has locked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 269
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -20
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 269
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -20
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -51;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -51
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 269;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 274
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 5 has unlocked the mutex mcr1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 274
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -21
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -52;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -52
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 274;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 279
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The signal sig1 was send from the thread 5
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 3 has locked the mutex mcr1
The thread 5 has locked the mutex mut2
The thread 5 has unlocked the mutex mut2
Thread 5: The sum of a and b is 279
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -22
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 279
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -22
The thread 4 has locked the mutex mut1
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -53;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -53
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 279;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 284
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 284
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -23
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -54;
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -54
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 284;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 289
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 3 has taken the element from the queue with the number 10
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 289
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -24
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -55;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -55
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 289;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 294
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 3 has unlocked the mutex mcr1
Thread 1: The sum of a and b is 294
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -25
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -56;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -56
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 294;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 299
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 10
The signal sig2 was repeatedly send from the thread 3
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 299
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -26
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -57;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -57
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 299;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 304
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 304
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -27
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -58;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -58
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 304;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 309
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 309
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -28
Thread 1: The sum of g and h is 26
The thread 2 has locked the mutex mut1
Thread 1: The value of flag is true
The thread 2 has unlocked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Thread 2: The sum of a and b is 309
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 2: The sum of c and d is 1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Thread 2: The sum of e and f is -28
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -59;
Thread 2: The sum of g and h is 11
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -59
Thread 2: The value of flag is true
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 309;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 314
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
Thread 5 has added the element to the queue with the number 11
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 314
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -29
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -60;
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -60
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 314;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 319
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 319
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -30
Thread 1: The sum of g and h is 26
The thread 4 has locked the mutex mut1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The thread 5 has unlocked the mutex mcr1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -61;
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -61
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 319;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 324
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 324
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -31
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -62;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -62
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 324;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 329
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The signal sig1 was send from the thread 5
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 329
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -32
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -63;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -63
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 329;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 334
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 3 has locked the mutex mcr1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 5 has locked the mutex mut2
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 334
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -33
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -64;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -64
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 334;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 339
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 5 has unlocked the mutex mut2
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 339
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -34
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -65;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -65
Thread 5: The sum of a and b is 339
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -35
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 339;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 344
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 3 has taken the element from the queue with the number 11
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 344
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -35
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -66;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -66
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 344;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 349
The thread 3 has unlocked the mutex mcr1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 349
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -36
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -67;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -67
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 349;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 354
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 11
The signal sig2 was repeatedly send from the thread 3
The thread 4 has locked the mutex mut1
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has locked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 354
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -37
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -68;
The thread 2 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -68
The thread 2 has unlocked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 354;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 359
Thread 2: The sum of a and b is 359
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -38
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Thread 2: The sum of g and h is 26
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 2: The value of flag is true
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 359
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -38
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 5 has added the element to the queue with the number 12
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -69;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -69
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 359;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 364
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 5 has unlocked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 364
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -39
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -70;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -70
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 364;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 369
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The thread 2 has locked the mutex mcr1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 2 has added the element to the queue with the number 13
The thread 4 has locked the mutex mut1
Thread 1: The sum of a and b is 369
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -40
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -71;
The thread 2 has unlocked the mutex mcr1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -71
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 369;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 374
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The signal sig1 was send from the thread 5
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 374
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -41
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The signal sig1 was send from the thread 2
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -72;
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -72
Thread 2: The sum of a and b is 374
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -42
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 374;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 379
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 3 has locked the mutex mcr1
The thread 5 has locked the mutex mut2
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 379
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -42
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -73;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -73
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 379;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 384
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 3 has taken the element from the queue with the number 13
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 384
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -43
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 5 has unlocked the mutex mut2
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -74;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -74
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 384;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 389
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 389
Thread 1: The sum of c and d is 4294967220
Thread 5: The sum of a and b is 384
Thread 1: The sum of e and f is -44
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Thread 5: The sum of c and d is 4294967220
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -75;
Thread 5: The sum of e and f is -45
Thread 5: The sum of g and h is 11
The thread 3 has unlocked the mutex mcr1
Thread 5: The value of flag is true
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -75
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 389;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 394
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 394
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -45
Thread 1: The sum of g and h is 11
The thread 4 has locked the mutex mut2
Thread 1: The value of flag is true
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 4 is waiting for an open semaphore scr21
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The semaphore scr21 is closed by the thread 4
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -76;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -76
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 394;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 399
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 399
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -46
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -77;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -77
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 399;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 404
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 13
The signal sig2 was repeatedly send from the thread 3
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 404
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -47
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -78;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -78
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 404;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 409
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 409
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -48
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -79;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -79
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 409;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 414
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 414
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -49
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 5 has added the element to the queue with the number 14
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 414
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -49
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -80;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -80
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 414;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 419
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 419
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -50
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -81;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -81
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 419;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 424
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 5 has unlocked the mutex mcr1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 5
The thread 3 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 424
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -51
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -82;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -82
Thread 3 has taken the element from the queue with the number 14
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 424;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 429
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 429
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -52
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -83;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -83
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 429;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 434
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 3 has unlocked the mutex mcr1
The thread 5 has locked the mutex mut2
The thread 4 has locked the mutex mut1
The signal sig2 was repeatedly send from the thread 3
The thread 2 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Thread 2 has added the element to the queue with the number 14
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 434
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -53
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -84;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -84
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 434;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 439
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 439
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -54
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -85;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -85
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 439;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 444
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 444
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -55
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -86;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -86
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 444;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 449
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The thread 2 has unlocked the mutex mcr1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 449
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -56
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -87;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -87
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 449;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 454
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 454
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -57
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -88;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -88
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 454;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 459
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 459
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -58
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -89;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -89
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 459;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 464
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The signal sig1 was send from the thread 2
The thread 1 has unlocked the mutex mut1
The thread 3 has locked the mutex mcr1
Thread 1: The sum of a and b is 464
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -59
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -90;
The thread 2 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -90
The thread 2 has unlocked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 464;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 469
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 2: The sum of a and b is 469
The thread 5 has unlocked the mutex mut2
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -60
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 469
Thread 1: The sum of c and d is 1
Thread 3 has taken the element from the queue with the number 14
Thread 1: The sum of e and f is -60
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -91;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -91
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 469;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 474
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 474
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -61
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 3 has unlocked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -92;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -92
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 474;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 479
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 479
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -62
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The thread 2 has locked the mutex mcr1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -93;
The signal sig2 was repeatedly send from the thread 3
Thread 2 has added the element to the queue with the number 14
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -93
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 479;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 484
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 484
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -63
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -94;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -94
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 484;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 489
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 489
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -64
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 5: The sum of a and b is 474
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -95;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -95
Thread 5: The sum of c and d is 1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 489;
The thread 2 has unlocked the mutex mcr1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 494
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5: The sum of e and f is -65
The thread 1 has locked the mutex mut1
Thread 5: The sum of g and h is 11
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 494
Thread 5: The value of flag is true
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -65
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -96;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -96
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 494;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 499
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 499
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -66
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -97;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -97
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 499;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 504
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 504
Thread 1: The sum of c and d is 1
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The signal sig1 was send from the thread 2
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 504
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -67
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Thread 1: The sum of e and f is -67
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 3 has locked the mutex mcr1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -98;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -98
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 504;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 509
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 3 has taken the element from the queue with the number 14
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 509
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -68
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -99;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -99
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 509;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 514
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5 has added the element to the queue with the number 14
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 514
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -69
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -100;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -100
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 514;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 519
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 5 has unlocked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 519
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -70
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -101;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -101
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 519;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 524
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The signal sig1 was send from the thread 5
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 15
The thread 5 has locked the mutex mut2
The thread 5 has unlocked the mutex mut2
Thread 5: The sum of a and b is 524
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -71
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 4 is waiting for an open semaphore scr21
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 524
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -71
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -102;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -102
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 524;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 529
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 529
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -72
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The thread 2 has unlocked the mutex mcr1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -103;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -103
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 529;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 534
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The signal sig1 was send from the thread 2
The thread 3 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 3 has taken the element from the queue with the number 15
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 534
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -73
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 2 has locked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 2 has unlocked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -104;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -104
Thread 2: The sum of a and b is 534
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -74
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 534;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 539
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 1 has locked the mutex mut1
The thread 4 has unlocked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 539
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -74
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -105;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -105
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 539;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 544
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
The thread 1 has locked the mutex mut1
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
The signal sig21 was repeatedly send from the thread 1
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
The thread 1 has unlocked the mutex mut1
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of a and b is 544
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of c and d is 4294967220
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of e and f is -75
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -106;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -106
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 544;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 549
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 549
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -76
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -107;
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -107
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 549;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 554
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
The thread 3 has unlocked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 554
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -77
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -108;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -108
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 554;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 559
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The signal sig2 was repeatedly send from the thread 3
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 559
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -78
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -109;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -109
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 559;
The thread 5 has locked the mutex mcr1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 564
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 564
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -79
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -110;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -110
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 564;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 569
Thread 5 has added the element to the queue with the number 15
The thread 4 has locked the mutex mut1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 16
The thread 4 has unlocked the mutex mut1
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The thread 3 has locked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 569
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -80
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The thread 2 has locked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 2 has unlocked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -111;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -111
Thread 2: The sum of a and b is 569
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 569;
Thread 2: The sum of c and d is 4294967220
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 574
Thread 2: The sum of e and f is -81
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 2: The sum of g and h is 11
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Thread 2: The value of flag is true
The thread 5 has locked the mutex mut2
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 574
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -81
The thread 5 has unlocked the mutex mut2
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -112;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -112
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 574;
The thread 4 has locked the mutex mut2
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 579
The thread 4 sends the signal sig22 to the thread 5
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 5: The sum of a and b is 579
Thread 5: The sum of c and d is 1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 579
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -82
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of g and h is 26
The semaphore scr21 is closed by the thread 4
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -113;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -113
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 579;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 584
Thread 5: The sum of e and f is -82
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 3 has taken the element from the queue with the number 16
The thread 4 has unlocked the mutex mut1
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 16
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 584
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -83
Thread 1: The sum of g and h is 11
The thread 2 has unlocked the mutex mcr1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -114;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -114
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 584;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 589
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Thread 5 has added the element to the queue with the number 17
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 3 has locked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The signal sig21 was repeatedly send from the thread 1
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 589
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -84
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 2 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -115;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -115
The thread 2 has unlocked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 589;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 594
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 2: The sum of a and b is 594
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -85
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Thread 3 has taken the element from the queue with the number 17
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 594
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -85
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 3 has unlocked the mutex mcr1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -116;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -116
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 594;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 599
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 599
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -86
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -117;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -117
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 599;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 604
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 604
Thread 1: The sum of c and d is 1
The signal sig2 was repeatedly send from the thread 3
Thread 1: The sum of e and f is -87
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -118;
The thread 2 has locked the mutex mcr1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -118
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 604;
Thread 2 has added the element to the queue with the number 17
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 609
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 2
The thread 3 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 609
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -88
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Thread 3 has taken the element from the queue with the number 17
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
The thread 5 has locked the mutex mut2
Thread 2: The sum of a and b is 609
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -88
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -119;
The signal sig1 was send from the thread 6
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -119
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 609;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 614
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 614
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -89
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -120;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -120
The thread 3 has unlocked the mutex mcr1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 614;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 619
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 619
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -90
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -121;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -121
The signal sig2 was repeatedly send from the thread 3
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 619;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 624
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 624
The thread 2 has locked the mutex mcr1
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -91
Thread 1: The sum of g and h is 11
Thread 2 has added the element to the queue with the number 17
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -122;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -122
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 624;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 629
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 629
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -92
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -123;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -123
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 629;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 634
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 634
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -93
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 2 has unlocked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -124;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -124
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 634;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 639
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 639
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -94
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -125;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -125
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 639;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 644
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 644
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -95
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -126;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -126
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 644;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 649
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The signal sig1 was send from the thread 2
The semaphore scr21 is opened by the thread 1
The thread 6 has locked the mutex mcr1
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 649
Thread 2: The sum of c and d is 4294967220
Thread 6 has added the element to the queue with the number 18
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 649
Thread 1: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -96
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
Thread 1: The sum of e and f is -96
The thread 5 has unlocked the mutex mut2
Thread 1: The sum of g and h is 26
The thread 6 has unlocked the mutex mcr1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -127;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -127
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 649;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 654
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 654
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -97
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -128;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -128
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 654;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 659
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
Thread 5: The sum of a and b is 659
The signal sig21 was repeatedly send from the thread 1
Thread 5: The sum of c and d is 4294967220
The thread 1 has unlocked the mutex mut1
Thread 5: The sum of e and f is -98
Thread 1: The sum of a and b is 659
Thread 5: The sum of g and h is 26
Thread 1: The sum of c and d is 4294967220
Thread 5: The value of flag is true
Thread 1: The sum of e and f is -98
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -129;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -129
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 659;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 664
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 664
Thread 1: The sum of c and d is 4294967220
The signal sig1 was send from the thread 6
Thread 1: The sum of e and f is -99
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -130;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -130
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 664;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 669
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 669
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -100
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 3 has locked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -131;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -131
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 669;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 674
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 674
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -101
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -132;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -132
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 674;
Thread 3 has taken the element from the queue with the number 18
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 679
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 679
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -102
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -133;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -133
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 679;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 684
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 3 has unlocked the mutex mcr1
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 684
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -103
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -134;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -134
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 684;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 689
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 689
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -104
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -135;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -135
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 689;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 694
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The signal sig2 was repeatedly send from the thread 3
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 2 has added the element to the queue with the number 18
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 694
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -105
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -136;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -136
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 694;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 699
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 699
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -106
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -137;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -137
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 699;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 704
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 704
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -107
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -138;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -138
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 704;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 709
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 709
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -108
The thread 2 has locked the mutex mut1
Thread 1: The sum of g and h is 26
The thread 2 has unlocked the mutex mut1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Thread 2: The sum of a and b is 709
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -108
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -139;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -139
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 709;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 714
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5 has added the element to the queue with the number 19
The thread 4 has locked the mutex mut1
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 6 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 714
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -109
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -140;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -140
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 714;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 719
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 719
Thread 6 has added the element to the queue with the number 20
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -110
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -141;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -141
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 719;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 724
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 724
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -111
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -142;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -142
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 724;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 729
The thread 6 has unlocked the mutex mcr1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 5 has locked the mutex mut2
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
The thread 5 has unlocked the mutex mut2
Thread 5: The sum of a and b is 729
Thread 5: The sum of c and d is 1
Thread 5: The sum of e and f is -112
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 729
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -112
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The thread 4 has unlocked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -143;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -143
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 729;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 734
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 734
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -113
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 3 has taken the element from the queue with the number 20
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -144;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -144
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 734;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 739
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 739
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -114
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -145;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -145
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 739;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 744
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 744
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -115
The thread 4 has locked the mutex mut1
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -146;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -146
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 744;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 749
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
The thread 1 has unlocked the mutex mut1
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of a and b is 749
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -116
Thread 1: The sum of g and h is 26
The semaphore scr21 is closed by the thread 4
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -147;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -147
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 749;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 754
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 754
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -117
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -148;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -148
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 754;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 759
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
The thread 3 has unlocked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 759
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -118
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -149;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -149
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 759;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 764
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The signal sig2 was repeatedly send from the thread 3
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 764
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -119
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 2 has locked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -150;
Thread 2 has added the element to the queue with the number 20
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -150
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 764;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 769
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 2 has unlocked the mutex mcr1
Thread 1: The sum of a and b is 769
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -120
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -151;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -151
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 769;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 774
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 774
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -121
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -152;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -152
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 774;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 779
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 5 has added the element to the queue with the number 21
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 779
The thread 6 has locked the mutex mcr1
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -122
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The thread 2 has locked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
The thread 2 has unlocked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -153;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -153
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 779;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 784
Thread 2: The sum of a and b is 779
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
Thread 2: The sum of c and d is 4294967220
The thread 4 has locked the mutex mut1
The semaphore scr21 is opened by the thread 1
Thread 2: The sum of e and f is -123
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
The thread 5 has locked the mutex mut2
The thread 4 has unlocked the mutex mut1
Thread 6 has added the element to the queue with the number 22
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 784
The thread 6 has unlocked the mutex mcr1
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -123
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -154;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -154
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 784;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 789
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The signal sig1 was send from the thread 6
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 789
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -124
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -155;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -155
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 789;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 794
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 794
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -125
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 3 has locked the mutex mcr1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -156;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -156
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 794;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 799
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 799
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -126
Thread 1: The sum of g and h is 26
Thread 3 has taken the element from the queue with the number 22
The thread 5 has unlocked the mutex mut2
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -157;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -157
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 799;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 804
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 has locked the mutex mut2
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 804
Thread 1: The sum of c and d is 1
The thread 4 sends the signal sig22 to the thread 5
Thread 1: The sum of e and f is -127
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 4 is waiting for an open semaphore scr21
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -158;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -158
The semaphore scr21 is closed by the thread 4
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 804;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 809
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 809
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -128
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -159;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -159
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 809;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 814
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 814
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -129
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -160;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -160
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 814;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 819
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 819
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -130
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -161;
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -161
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 819;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 824
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 3 has unlocked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 824
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -131
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 4 has locked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -162;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -162
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 824;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 829
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 2 has locked the mutex mcr1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
Thread 2 has added the element to the queue with the number 22
The signal sig2 was repeatedly send from the thread 3
The thread 4 has unlocked the mutex mut1
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
The thread 1 has locked the mutex mut1
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 829
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -132
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
The thread 4 has locked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -163;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -163
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 829;
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 834
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
The signal sig21 was repeatedly send from the thread 1
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
The thread 1 has unlocked the mutex mut1
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 1: The sum of a and b is 834
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
Thread 1: The sum of c and d is 1
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of e and f is -133
The thread 4 has locked the mutex mut1
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -164;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -164
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 834;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 839
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 5: The sum of a and b is 799
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -134
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
The signal sig1 was send from the thread 2
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 6 has locked the mutex mcr1
Thread 1: The sum of a and b is 839
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -134
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -165;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -165
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 839;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 844
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 844
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -135
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -166;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -166
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 844;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 849
Thread 6 has added the element to the queue with the number 23
The thread 4 has locked the mutex mut1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 849
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 849
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -136
Thread 1: The sum of g and h is 26
Thread 2: The sum of c and d is 1
Thread 1: The value of flag is true
Thread 2: The sum of e and f is -136
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 2: The sum of g and h is 11
Thread 3 has taken the element from the queue with the number 23
Thread 2: The value of flag is true
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -167;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -167
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 849;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 854
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 854
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -137
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -168;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -168
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 854;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 859
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 3 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig2 was repeatedly send from the thread 3
The thread 5 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 859
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -138
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -169;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -169
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 859;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 864
Thread 5 has added the element to the queue with the number 23
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 864
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -139
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -170;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -170
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 864;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 869
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 5 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig1 was send from the thread 5
The thread 2 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Thread 2 has added the element to the queue with the number 24
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 869
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -140
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -171;
The thread 5 has locked the mutex mut2
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -171
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 869;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 874
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 874
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -141
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -172;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -172
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 874;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 879
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 879
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -142
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 5 has unlocked the mutex mut2
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -173;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -173
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 879;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 884
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 5: The sum of a and b is 884
Thread 5: The sum of c and d is 1
Thread 5: The sum of e and f is -143
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
The signal sig1 was send from the thread 2
The thread 6 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 884
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -143
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -174;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -174
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 884;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 889
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 2 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 2 has unlocked the mutex mut1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 2: The sum of a and b is 889
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -144
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
Thread 6 has added the element to the queue with the number 25
The thread 4 has locked the mutex mut1
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 889
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -144
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -175;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -175
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 889;
Thread 3 has taken the element from the queue with the number 25
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 894
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 894
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -145
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -176;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -176
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 894;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 899
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 3 has unlocked the mutex mcr1
The thread 1 has unlocked the mutex mut1
The signal sig2 was repeatedly send from the thread 3
The thread 4 has locked the mutex mut1
Thread 1: The sum of a and b is 899
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -146
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The thread 3 has locked the mutex mcr1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -177;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -177
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 899;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 904
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 904
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -147
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -178;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -178
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 904;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 909
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 909
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -148
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -179;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -179
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 909;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 914
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 914
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -149
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -180;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -180
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 914;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 919
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 919
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -150
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -181;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -181
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 919;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 924
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 924
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -151
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -182;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -182
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 924;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 929
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 929
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -152
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -183;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -183
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 929;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 934
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 934
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -153
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -184;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -184
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 934;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 939
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 939
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -154
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -185;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -185
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 939;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 944
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 944
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -155
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -186;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -186
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 944;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 949
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 949
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -156
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -187;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -187
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 949;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 954
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 954
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -157
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -188;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -188
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 954;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 959
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 959
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -158
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -189;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -189
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 959;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 964
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 964
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -159
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -190;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -190
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 964;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 969
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 969
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -160
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -191;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -191
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 969;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 974
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 974
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -161
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -192;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -192
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 974;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 979
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 979
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -162
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -193;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -193
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 979;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 984
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 984
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -163
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -194;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -194
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 984;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 989
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 989
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -164
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -195;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -195
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 989;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 994
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 994
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -165
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -196;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -196
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 994;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 999
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 999
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -166
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -197;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -197
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 999;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1004
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1004
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -167
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -198;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -198
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1004;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1009
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1009
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -168
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -199;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -199
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1009;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1014
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1014
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -169
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -200;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -200
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1014;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1019
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1019
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -170
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -201;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -201
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1019;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1024
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1024
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -171
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -202;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -202
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1024;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1029
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1029
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -172
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -203;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -203
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1029;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1034
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1034
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -173
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -204;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -204
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1034;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1039
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1039
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -174
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -205;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -205
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1039;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1044
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1044
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -175
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -206;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -206
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1044;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1049
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1049
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -176
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -207;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -207
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1049;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1054
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1054
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -177
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -208;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -208
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1054;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1059
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1059
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -178
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -209;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -209
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1059;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1064
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1064
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -179
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -210;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -210
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1064;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1069
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1069
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -180
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -211;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -211
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1069;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1074
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1074
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -181
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -212;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -212
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1074;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1079
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1079
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -182
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -213;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -213
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1079;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1084
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1084
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -183
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -214;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -214
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1084;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1089
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1089
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -184
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -215;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -215
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1089;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1094
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1094
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -185
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -216;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -216
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1094;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1099
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1099
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -186
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -217;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -217
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1099;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1104
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1104
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -187
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -218;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -218
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1104;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1109
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1109
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -188
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -219;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -219
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1109;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1114
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1114
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -189
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -220;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -220
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1114;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1119
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1119
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -190
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -221;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -221
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1119;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1124
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1124
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -191
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -222;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -222
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1124;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1129
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1129
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -192
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -223;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -223
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1129;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1134
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1134
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -193
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -224;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -224
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1134;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1139
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1139
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -194
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -225;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -225
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1139;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1144
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1144
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -195
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -226;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -226
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1144;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1149
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1149
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -196
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -227;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -227
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1149;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1154
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1154
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -197
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -228;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -228
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1154;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1159
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1159
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -198
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -229;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -229
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1159;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1164
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1164
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -199
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -230;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -230
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1164;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1169
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1169
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -200
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -231;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -231
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1169;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1174
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1174
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -201
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -232;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -232
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1174;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1179
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1179
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -202
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -233;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -233
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1179;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1184
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1184
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -203
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -234;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -234
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1184;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1189
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1189
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -204
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -235;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -235
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1189;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1194
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1194
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -205
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -236;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -236
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1194;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1199
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1199
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -206
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -237;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -237
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1199;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1204
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1204
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -207
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -238;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -238
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1204;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1209
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1209
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -208
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -239;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -239
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1209;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1214
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1214
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -209
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -240;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -240
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1214;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1219
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1219
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -210
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -241;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -241
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1219;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1224
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1224
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -211
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -242;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -242
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1224;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1229
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1229
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -212
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -243;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -243
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1229;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1234
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1234
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -213
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -244;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -244
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1234;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1239
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1239
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -214
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -245;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -245
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1239;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1244
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1244
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -215
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -246;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -246
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1244;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1249
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1249
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -216
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -247;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -247
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1249;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1254
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1254
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -217
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -248;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -248
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1254;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1259
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1259
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -218
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -249;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -249
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1259;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1264
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1264
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -219
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -250;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -250
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1264;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1269
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1269
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -220
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -251;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -251
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1269;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1274
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1274
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -221
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -252;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -252
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1274;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1279
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1279
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -222
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -253;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -253
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1279;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1284
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1284
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -223
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -254;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -254
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1284;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1289
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1289
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -224
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -255;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -255
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1289;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1294
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1294
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -225
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -256;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -256
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1294;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1299
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1299
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -226
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -257;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -257
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1299;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1304
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1304
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -227
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -258;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -258
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1304;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1309
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 4 has locked the mutex mut1
The thread 4 is waiting for a signal sig 21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1309
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -228
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -259;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -259
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1309;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1314
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1314
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -229
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -260;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -260
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1314;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1319
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Thread 3 has taken the element from the queue with the number 24
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The signal sig21 was repeatedly send from the thread 1
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 1319
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -230
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -261;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -261
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1319;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1324
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1324
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -231
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -262;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -262
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1324;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1329
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1329
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -232
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -263;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -263
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1329;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1334
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1334
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -233
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -264;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -264
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1334;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1339
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1339
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -234
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -265;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -265
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1339;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1344
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1344
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -235
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -266;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -266
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1344;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1349
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1349
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -236
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -267;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -267
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1349;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1354
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1354
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -237
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -268;
The thread 3 has unlocked the mutex mcr1
The semaphore scr21 is closed by the thread 4
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -268
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1354;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1359
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1359
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -238
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -269;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -269
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1359;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1364
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 24
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1364
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -239
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -270;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -270
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1364;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1369
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1369
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -240
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -271;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -271
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1369;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1374
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The signal sig2 was repeatedly send from the thread 3
The signal sig1 was send from the thread 2
The thread 6 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 has locked the mutex mut1
Thread 1: The sum of a and b is 1374
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -241
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -272;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -272
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1374;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1379
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1379
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -242
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -273;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -273
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1379;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1384
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
Thread 6 has added the element to the queue with the number 25
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 4 has unlocked the mutex mut1
The thread 5 has locked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 1384
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -243
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1384
Thread 1: The sum of c and d is 1
The thread 4 has locked the mutex mut1
Thread 1: The sum of e and f is -243
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -274;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -274
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1384;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1389
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1389
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -244
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -275;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -275
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1389;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1394
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5 has added the element to the queue with the number 26
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1394
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -245
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -276;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -276
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1394;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1399
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1399
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -246
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -277;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -277
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1399;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1404
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 5 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 1404
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -247
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -278;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -278
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1404;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1409
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 4 has locked the mutex mut1
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1409
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -248
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -279;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -279
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1409;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1414
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1414
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -249
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -280;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -280
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1414;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1419
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1419
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -250
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -281;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -281
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1419;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1424
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1424
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -251
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The signal sig1 was send from the thread 5
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -282;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -282
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1424;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1429
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The semaphore scr21 is closed by the thread 4
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1429
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -252
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The thread 3 has locked the mutex mcr1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -283;
The thread 5 has locked the mutex mut2
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -283
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1429;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1434
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1434
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -253
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -284;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -284
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1434;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1439
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1439
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -254
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -285;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -285
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1439;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1444
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1444
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -255
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -286;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -286
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1444;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1449
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1449
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -256
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -287;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -287
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1449;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1454
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1454
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -257
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -288;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -288
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1454;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1459
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1459
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -258
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Thread 3 has taken the element from the queue with the number 26
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -289;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -289
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1459;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1464
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1464
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -259
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 3 has unlocked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -290;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -290
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1464;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1469
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1469
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -260
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -291;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -291
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1469;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1474
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1474
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -261
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -292;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -292
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1474;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1479
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1479
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -262
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 2 has locked the mutex mcr1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -293;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -293
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1479;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1484
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
Thread 2 has added the element to the queue with the number 26
The signal sig2 was repeatedly send from the thread 3
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1484
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -263
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -294;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -294
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1484;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1489
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1489
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -264
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -295;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -295
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1489;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1494
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 2 has unlocked the mutex mcr1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1494
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -265
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 5 has unlocked the mutex mut2
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The signal sig1 was send from the thread 2
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -296;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -296
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1494;
The thread 2 has locked the mutex mut1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1499
The thread 2 has unlocked the mutex mut1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 2: The sum of a and b is 1499
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Thread 2: The sum of c and d is 1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 5: The sum of a and b is 1499
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1499
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -266
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The thread 4 has locked the mutex mut2
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 5: The sum of c and d is 1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -297;
Thread 2: The sum of e and f is -266
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -297
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 27
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1499;
The thread 2 has unlocked the mutex mcr1
Thread 5: The sum of e and f is -267
The signal sig1 was send from the thread 2
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 2: The sum of a and b is 1504
Thread 5: The sum of g and h is 11
Thread 2: The sum of c and d is 1
Thread 5: The value of flag is true
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1504
The thread 5 has locked the mutex mcr1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The semaphore scr21 is closed by the thread 4
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5 has added the element to the queue with the number 28
Thread 2: The sum of e and f is -267
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 5 has locked the mutex mut2
The thread 5 has unlocked the mutex mut2
Thread 5: The sum of a and b is 1504
Thread 5: The sum of c and d is 1
Thread 5: The sum of e and f is -267
Thread 5: The sum of g and h is 11
Thread 5: The value of flag is true
The thread 5 has locked the mutex mcr1
Thread 5 has added the element to the queue with the number 29
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 5 has locked the mutex mut2
The thread 5 is waiting for a signal sig 22
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 30
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 31
The thread 6 has unlocked the mutex mcr1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 32
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 32
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
The thread 1 has locked the mutex mut1
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The signal sig21 was repeatedly send from the thread 1
The thread 4 has locked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 2: The sum of a and b is 1504
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -267
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Thread 1: The sum of a and b is 1504
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -267
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -298;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -298
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1504;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1509
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1509
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -268
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -299;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -299
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1509;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1514
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
The thread 1 has locked the mutex mut1
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 1: The sum of a and b is 1514
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -269
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -300;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -300
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1514;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1519
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1519
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -270
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -301;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -301
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1519;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1524
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1524
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -271
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -302;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -302
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1524;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1529
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 6 has added the element to the queue with the number 32
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1529
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -272
The thread 5 has unlocked the mutex mut2
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -303;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -303
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1529;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1534
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1534
The thread 6 has unlocked the mutex mcr1
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -273
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -304;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -304
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1534;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1539
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1539
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -274
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -305;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -305
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1539;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1544
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1544
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -275
The thread 4 has locked the mutex mut2
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 4 is waiting for an open semaphore scr21
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -306;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -306
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1544;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1549
The semaphore scr21 is closed by the thread 4
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1549
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -276
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -307;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -307
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1549;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1554
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 3 has locked the mutex mcr1
The thread 4 has locked the mutex mut1
Thread 3 has taken the element from the queue with the number 32
The thread 3 has unlocked the mutex mcr1
Thread 5: The sum of a and b is 1549
The signal sig1 was send from the thread 6
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 32
The signal sig2 was repeatedly send from the thread 3
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1554
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -277
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -308;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -308
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1554;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1559
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1559
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -278
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -309;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -309
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1559;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1564
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 1564
Thread 1: The sum of c and d is 1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of e and f is -279
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -310;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -310
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1564;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1569
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1569
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -280
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -311;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -311
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1569;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1574
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 4 has locked the mutex mut1
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1574
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -281
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -312;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -312
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1574;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1579
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1579
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -282
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -313;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -313
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1579;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1584
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1584
Thread 1: The sum of c and d is 4294967220
The thread 4 has locked the mutex mut1
Thread 1: The sum of e and f is -283
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -314;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -314
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1584;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1589
The thread 4 has unlocked the mutex mut1
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -284
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1589
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -284
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -315;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -315
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1589;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1594
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1594
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -285
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -316;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -316
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1594;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1599
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1599
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -286
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -317;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -317
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1599;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1604
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1604
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -287
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -318;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -318
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1604;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1609
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1609
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -288
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The signal sig1 was send from the thread 2
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
The thread 2 has locked the mutex mut1
The thread 2 has unlocked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Thread 2: The sum of a and b is 1609
Thread 2: The sum of c and d is 1
Thread 2: The sum of e and f is -288
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 2 has locked the mutex mcr1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -319;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -319
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1609;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1614
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 2 has added the element to the queue with the number 33
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1614
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -289
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -320;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -320
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1614;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1619
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
The thread 2 has locked the mutex mut1
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 2 has unlocked the mutex mut1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
Thread 2: The sum of a and b is 1619
Thread 2: The sum of c and d is 4294967220
Thread 2: The sum of e and f is -290
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
The thread 1 has unlocked the mutex mut1
The thread 2 has locked the mutex mcr1
Thread 1: The sum of a and b is 1619
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -290
Thread 2 has added the element to the queue with the number 34
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -321;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -321
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1619;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1624
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1624
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -291
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -322;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -322
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1624;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1629
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1629
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -292
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -323;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -323
The thread 2 has unlocked the mutex mcr1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1629;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1634
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1634
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -293
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -324;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -324
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1634;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1639
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 5 has locked the mutex mcr1
The semaphore scr21 is opened by the thread 1
The signal sig1 was send from the thread 2
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1639
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -294
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -325;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -325
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1639;
The thread 2 has locked the mutex mut1
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1644
The thread 2 has unlocked the mutex mut1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Thread 2: The sum of a and b is 1644
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
Thread 2: The sum of c and d is 1
The semaphore scr21 is opened by the thread 1
Thread 2: The sum of e and f is -295
The thread 1 has locked the mutex mut1
Thread 2: The sum of g and h is 11
Thread 2: The value of flag is true
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1644
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -295
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -326;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -326
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1644;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1649
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1649
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -296
Thread 1: The sum of g and h is 26
Thread 5 has added the element to the queue with the number 35
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -327;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -327
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1649;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1654
The thread 4 has locked the mutex mut1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1654
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -297
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -328;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -328
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1654;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1659
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1659
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -298
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -329;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -329
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1659;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1664
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has locked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 1664
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -299
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -330;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -330
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1664;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1669
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1669
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -300
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -331;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -331
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1669;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1674
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1674
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -301
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -332;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -332
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1674;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1679
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1679
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -302
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -333;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -333
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1679;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1684
The thread 4 has locked the mutex mut1
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1684
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -303
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -334;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -334
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1684;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1689
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 has locked the mutex mut1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1689
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -304
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -335;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -335
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1689;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1694
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1694
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -305
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 4 has locked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -336;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -336
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1694;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1699
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 4 is waiting for an open semaphore scr21
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 1699
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -306
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -337;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -337
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1699;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1704
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1704
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -307
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -338;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -338
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1704;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1709
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1709
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -308
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -339;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -339
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1709;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1714
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1714
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -309
The thread 4 has locked the mutex mut1
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -340;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -340
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1714;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1719
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1719
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -310
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -341;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -341
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1719;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1724
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1724
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -311
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -342;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -342
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1724;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1729
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1729
The thread 4 has locked the mutex mut1
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -312
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -343;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -343
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1729;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1734
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 1 has locked the mutex mut1
The thread 4 has unlocked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 1734
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -313
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -344;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -344
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1734;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1739
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1739
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -314
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -345;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -345
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1739;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1744
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1744
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -315
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -346;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -346
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1744;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1749
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1749
Thread 1: The sum of c and d is 4294967220
The thread 4 has locked the mutex mut1
Thread 1: The sum of e and f is -316
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -347;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -347
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1749;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1754
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1754
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -317
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -348;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -348
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1754;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1759
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1759
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -318
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -349;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -349
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1759;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1764
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1764
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -319
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -350;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -350
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1764;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1769
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1769
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -320
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -351;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -351
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1769;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1774
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1774
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -321
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -352;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -352
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1774;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1779
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1779
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -322
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -353;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -353
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1779;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1784
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1784
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -323
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -354;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -354
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1784;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1789
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1789
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -324
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -355;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -355
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1789;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1794
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1794
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -325
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -356;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -356
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1794;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1799
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1799
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -326
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -357;
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -357
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1799;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1804
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of a and b is 1804
Thread 1: The sum of c and d is 1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of e and f is -327
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -358;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -358
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1804;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1809
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1809
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -328
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -359;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -359
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1809;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1814
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1814
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -329
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -360;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -360
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1814;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1819
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
Thread 1: The sum of a and b is 1819
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of c and d is 4294967220
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of e and f is -330
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
The semaphore scr21 is closed by the thread 4
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -361;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -361
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1819;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1824
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1824
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -331
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -362;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -362
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1824;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1829
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1829
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -332
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -363;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -363
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1829;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1834
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1834
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -333
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -364;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -364
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1834;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1839
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1839
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -334
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -365;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -365
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1839;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1844
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1844
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -335
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -366;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -366
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1844;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1849
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1849
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -336
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -367;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -367
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1849;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1854
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 1 has locked the mutex mut1
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 1854
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -337
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -368;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -368
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1854;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1859
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1859
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -338
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -369;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -369
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1859;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1864
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 has locked the mutex mut1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1864
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -339
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -370;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -370
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1864;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1869
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1869
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -340
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -371;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -371
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1869;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1874
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1874
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -341
The thread 4 has locked the mutex mut1
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -372;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -372
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1874;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1879
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 1 has locked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1879
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -342
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -373;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -373
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1879;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1884
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1884
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -343
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -374;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -374
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1884;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1889
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1889
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -344
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -375;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -375
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1889;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1894
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1894
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -345
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -376;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -376
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1894;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1899
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1899
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -346
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -377;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -377
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1899;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1904
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 4 has locked the mutex mut1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1904
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -347
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -378;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -378
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1904;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1909
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1909
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -348
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -379;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -379
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1909;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1914
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1914
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -349
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -380;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -380
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1914;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1919
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1919
Thread 1: The sum of c and d is 1
The thread 4 has locked the mutex mut1
Thread 1: The sum of e and f is -350
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -381;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -381
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1919;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1924
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1924
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -351
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -382;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -382
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1924;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1929
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1929
The thread 4 has locked the mutex mut1
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -352
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -383;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -383
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1929;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1934
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1934
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -353
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -384;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -384
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1934;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1939
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1939
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -354
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -385;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -385
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1939;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1944
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1944
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -355
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -386;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -386
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1944;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1949
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1949
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -356
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -387;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -387
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1949;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1954
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1954
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -357
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 4 has locked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -388;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -388
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1954;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1959
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1959
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -358
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -389;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -389
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1959;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1964
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 4 has locked the mutex mut1
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1964
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -359
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -390;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -390
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1964;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1969
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1969
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -360
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -391;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -391
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1969;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1974
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1974
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -361
Thread 1: The sum of g and h is 11
The thread 4 has locked the mutex mut1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -392;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -392
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1974;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1979
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1979
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -362
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -393;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -393
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1979;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1984
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 1 has locked the mutex mut1
The thread 4 has unlocked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 4 is waiting for an open semaphore scr21
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 1984
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -363
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -394;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -394
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1984;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1989
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1989
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -364
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -395;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -395
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1989;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1994
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 1994
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -365
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -396;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -396
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1994;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 1999
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 1999
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -366
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -397;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -397
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 1999;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2004
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2004
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -367
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -398;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -398
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2004;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2009
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2009
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -368
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -399;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -399
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2009;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2014
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2014
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -369
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -400;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -400
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2014;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2019
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 1 has locked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
The signal sig21 was repeatedly send from the thread 1
The thread 4 has unlocked the mutex mut2
The thread 1 has unlocked the mutex mut1
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 2019
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -370
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -401;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -401
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2019;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2024
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2024
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -371
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -402;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -402
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2024;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2029
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2029
Thread 1: The sum of c and d is 1
The thread 4 has locked the mutex mut1
Thread 1: The sum of e and f is -372
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -403;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -403
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2029;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2034
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The thread 4 has unlocked the mutex mut1
The semaphore scr21 is opened by the thread 1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The thread 4 has locked the mutex mut2
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
Thread 1: The sum of a and b is 2034
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -373
The thread 4 is waiting for an open semaphore scr21
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
The semaphore scr21 is closed by the thread 4
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -404;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -404
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2034;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2039
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2039
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -374
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -405;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -405
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2039;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2044
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 1 has locked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The signal sig21 was repeatedly send from the thread 1
The semaphore scr21 is closed by the thread 4
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2044
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -375
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -406;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -406
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2044;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2049
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2049
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -376
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -407;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -407
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2049;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2054
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2054
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -377
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -408;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -408
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2054;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2059
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2059
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -378
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
The thread 4 has locked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -409;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -409
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2059;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2064
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2064
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -379
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -410;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -410
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2064;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2069
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2069
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -380
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -411;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -411
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2069;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2074
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2074
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -381
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The thread 4 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -412;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -412
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2074;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2079
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The semaphore scr21 is closed by the thread 4
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2079
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -382
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -413;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -413
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2079;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2084
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2084
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -383
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
The thread 4 has locked the mutex mut1
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -414;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -414
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2084;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2089
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2089
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -384
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -415;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -415
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2089;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2094
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2094
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -385
Thread 1: The sum of g and h is 11
The thread 4 has locked the mutex mut1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -416;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -416
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2094;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2099
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2099
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -386
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -417;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -417
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2099;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2104
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 2104
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -387
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -418;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -418
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2104;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2109
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2109
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -388
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -419;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -419
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2109;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2114
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of a and b is 2114
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -389
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -420;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -420
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2114;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2119
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2119
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -390
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -421;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -421
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2119;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2124
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 4 has locked the mutex mut1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2124
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -391
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -422;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -422
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2124;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2129
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2129
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -392
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -423;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -423
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2129;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2134
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2134
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -393
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 4 has locked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -424;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -424
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2134;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2139
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2139
The thread 5 has unlocked the mutex mcr1
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -394
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 4 has locked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -425;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -425
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2139;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2144
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The signal sig1 was send from the thread 5
The thread 3 has locked the mutex mcr1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2144
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -395
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -426;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -426
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2144;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2149
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 5 has locked the mutex mut2
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2149
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -396
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -427;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -427
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2149;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2154
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2154
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -397
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -428;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -428
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2154;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2159
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2159
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -398
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -429;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -429
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2159;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2164
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2164
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -399
Thread 3 has taken the element from the queue with the number 35
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -430;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -430
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2164;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2169
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2169
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -400
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -431;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -431
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2169;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2174
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2174
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -401
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -432;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -432
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2174;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2179
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2179
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -402
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -433;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -433
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2179;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2184
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
The thread 3 has unlocked the mutex mcr1
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2184
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -403
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -434;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -434
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2184;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2189
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2189
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -404
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 5 has unlocked the mutex mut2
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -435;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -435
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2189;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2194
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2194
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -405
Thread 1: The sum of g and h is 11
The thread 6 has locked the mutex mcr1
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -436;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -436
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2194;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2199
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The signal sig2 was repeatedly send from the thread 3
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2199
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -406
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -437;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -437
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2199;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2204
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2204
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -407
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -438;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -438
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2204;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2209
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2209
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -408
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -439;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -439
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2209;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2214
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2214
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -409
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -440;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -440
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2214;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2219
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2219
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -410
Thread 1: The sum of g and h is 26
Thread 5: The sum of a and b is 2204
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -441;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -441
Thread 6 has added the element to the queue with the number 35
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2219;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2224
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Thread 5: The sum of c and d is 4294967220
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 5: The sum of e and f is -411
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 6 has unlocked the mutex mcr1
Thread 1: The sum of a and b is 2224
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -411
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Thread 5: The sum of g and h is 11
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -442;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -442
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2224;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2229
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2229
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -412
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -443;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -443
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2229;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2234
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The semaphore scr21 is closed by the thread 4
The thread 1 has unlocked the mutex mut1
The thread 4 has locked the mutex mut1
Thread 1: The sum of a and b is 2234
Thread 1: The sum of c and d is 1
Thread 1: The sum of e and f is -413
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
The thread 4 has unlocked the mutex mut1
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -444;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -444
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2234;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2239
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The semaphore scr21 is opened by the thread 1
The thread 4 has locked the mutex mut2
The thread 1 has locked the mutex mut1
The thread 4 sends the signal sig22 to the thread 5
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
The thread 4 has unlocked the mutex mut2
Thread 1: The sum of a and b is 2239
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -414
Thread 1: The sum of g and h is 26
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 20;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 5
The signal sig1 was send from the thread 6
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -445;
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -445
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2239;
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2244
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 5: The value of flag is true
The thread 4 has locked the mutex mut1
The thread 2 has locked the mutex mcr1
Thread 2 has added the element to the queue with the number 36
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967295;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967295
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 2 has unlocked the mutex mcr1
The thread 4 has locked the mutex mut1
The thread 4 has unlocked the mutex mut1
Function "__sync_nand_and_fetch" was called by the thread No 4. The result value is 4294967218;
Thread 4: atomic_uint variable d after function "__sync_nand_and_fetch" is 4294967218
Function "__sync_bool_compare_and_swap" was called by the thread No 4. The result value is true;
Thread 4: atomic_bool variable fl after function "__sync_bool_compare_and_swap" is true
The thread 4 has locked the mutex mut2
The thread 4 sends the signal sig22 to the thread 5
The thread 4 has unlocked the mutex mut2
The thread 4 is waiting for an open semaphore scr21
The semaphore scr21 is closed by the thread 4
The thread 1 has locked the mutex mut1
The signal sig21 was repeatedly send from the thread 1
The thread 1 has unlocked the mutex mut1
Thread 1: The sum of a and b is 2244
Thread 1: The sum of c and d is 4294967220
Thread 1: The sum of e and f is -415
Thread 1: The sum of g and h is 11
Thread 1: The value of flag is true
Function "__sync_fetch_and_xor" was called by the thread No 1. The result value is 5;
Thread 1: atomic_ulong variable g  after function "__sync_fetch_and_xor" is 20
Function "__sync_fetch_and_and" was called by the thread No 1. The result value is 0;
The signal sig1 was send from the thread 2
The thread 2 has locked the mutex mut1
Thread 1: atomic_int variable b after function  is "__sync_fetch_and_and" 0
The thread 2 has unlocked the mutex mut1
Function "__sync_sub_and_fetch" was called by the thread No 1. The result value is -446;
Thread 2: The sum of a and b is 2244
Thread 1: atomic_long variable f after function "__sync_sub_and_fetch" is -446
Thread 2: The sum of c and d is 4294967220
Function "__sync_fetch_and_add" was called by the thread No 1. The return value is 2244;
Thread 2: The sum of e and f is -416
Thread 1: atomic_int variable a  after function "__sync_fetch_and_add" is 2249
Thread 2: The sum of g and h is 26
Thread 2: The value of flag is true
Function "__sync_or_and_fetch" was called by the thread No 1. The return value is 30:
The thread 2 has locked the mutex mcr1
Thread 1: atomic_long variable e after function "__sync_or_and_fetch" is 30
Function "__sync_val_compare_and_swap" was called by the thread No 1. The result value is 2;
Thread 1: atomic_uint variable c after function "__sync_val_compare_and_swap" is 2
The semaphore scr21 is opened by the thread 1
Thread 2 has added the element to the queue with the number 37
The thread 4 has locked the mutex mut1
The thread 2 has unlocked the mutex mcr1
The signal sig1 was send from the thread 2
The thread 5 has locked the mutex mcr1
Thread 5 has added the element to the queue with the number 38
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 5 has locked the mutex mut2
The thread 5 has unlocked the mutex mut2
The thread 3 has locked the mutex mcr1
Thread 5: The sum of a and b is 2249
Thread 5: The sum of c and d is 4294967220
Thread 5: The sum of e and f is -416
Thread 5: The sum of g and h is 26
Thread 5: The value of flag is true
Thread 3 has taken the element from the queue with the number 38
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 38
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 39
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 40
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 41
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 42
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 43
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 43
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 5 has locked the mutex mcr1
Thread 5 has added the element to the queue with the number 43
The thread 5 has unlocked the mutex mcr1
The signal sig1 was send from the thread 5
The thread 6 has locked the mutex mcr1
The thread 5 has locked the mutex mut2
The thread 5 is waiting for a signal sig 22
Thread 6 has added the element to the queue with the number 44
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 44
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 44
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 44
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 44
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 44
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 44
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 44
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 44
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 45
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 47
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 48
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 48
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
The thread 6 is waiting for a signal sig2
The thread 3 has locked the mutex mcr1
The CR1 was FULL ONCE
The CR1 was FULL AT LEAST TWICE
Thread 3 has taken the element from the queue with the number 49
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
The thread 6 is waiting for a signal sig2
The thread 3 has locked the mutex mcr1
The CR1 was FULL AT LEAST TWICE
The CR1 was FULL AT LEAST TWICE
Thread 3 has taken the element from the queue with the number 49
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
The thread 6 is waiting for a signal sig2
The thread 3 has locked the mutex mcr1
The CR1 was FULL AT LEAST TWICE
The CR1 was FULL AT LEAST TWICE
Thread 3 has taken the element from the queue with the number 49
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
The thread 6 is waiting for a signal sig2
The thread 3 has locked the mutex mcr1
The CR1 was FULL AT LEAST TWICE
The CR1 was FULL AT LEAST TWICE
Thread 3 has taken the element from the queue with the number 49
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
The thread 6 is waiting for a signal sig2
The thread 3 has locked the mutex mcr1
The CR1 was FULL AT LEAST TWICE
The CR1 was FULL AT LEAST TWICE
Thread 3 has taken the element from the queue with the number 49
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
The CR1 was FULL AT LEAST TWICE
The CR1 was FULL AT LEAST TWICE
Thread 3 has taken the element from the queue with the number 49
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 48
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 48
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 48
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 48
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 47
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 47
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 47
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 46
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 45
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 44
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 43
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 42
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 41
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 40
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 39
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 38
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 37
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 36
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 35
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 34
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 33
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 32
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 31
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 30
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 29
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 28
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 27
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 26
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 25
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 24
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 23
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 22
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 21
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 20
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 19
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 18
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 17
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 16
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 15
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 14
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 13
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 12
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 11
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 10
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 9
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 8
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 7
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 6
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 5
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 4
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 3
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 2
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 1
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
Thread 3 has taken the element from the queue with the number 0
The CR1 was EMPTY ONCE
The thread 3 has unlocked the mutex mcr1
The signal sig2 was repeatedly send from the thread 3
The thread 3 has locked the mutex mcr1
The CR1 was EMPTY AT LEAST TWICE
The thread 3 has unlocked the mutex mcr1
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 0
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 1
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 2
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 3
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 4
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 5
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 6
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 7
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 8
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 9
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 10
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 11
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 12
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 13
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 14
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 15
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 16
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 17
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 18
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 19
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 20
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 21
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 22
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 23
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 24
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 25
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 26
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 27
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 28
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 29
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 30
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 31
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 32
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 33
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 34
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 35
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 36
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 37
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 38
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 39
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 40
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 41
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 42
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 43
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 44
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 45
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 46
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 47
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 48
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
Thread 6 has added the element to the queue with the number 49
The thread 6 has unlocked the mutex mcr1
The signal sig1 was send from the thread 6
The thread 6 has locked the mutex mcr1
The thread 6 is waiting for a signal sig2
Thread 1 is cancelled
Thread 2 is cancelled
Thread 4 is cancelled
Thread 5 is cancelled
Thread 6 is cancelled
Consumer thread 3 of the data, stored in the CR1 is stopped !!!
All threads stopped !!!
The sum is 3024
